{"remainingRequest":"D:\\vue_workspace\\jwsystem\\node_modules\\babel-loader\\lib\\index.js!D:\\vue_workspace\\jwsystem\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\vue_workspace\\jwsystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_workspace\\jwsystem\\src\\views\\basicdata\\type\\category.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue_workspace\\jwsystem\\src\\views\\basicdata\\type\\category.vue","mtime":1679323878839},{"path":"D:\\vue_workspace\\jwsystem\\babel.config.js","mtime":1666484881107},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgYWRkVHlwZSwgZ2V0QWxsVHlwZSB9IGZyb20gJy4uLy4uLy4uL2FwaS9iYXNpY2RhdGEvdHlwZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVHlwZUNhdGVnb3J5JywKICBwcm9wczogewogICAgYWRkVHlwZU9wZW46IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBhZGRUeXBlT3BlbihvbGRWYWwsIG5ld1ZhbCkgewogICAgICB0aGlzLnNob3dEaWFsb2cgPSB0aGlzLmFkZFR5cGVPcGVuOwogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHR5cGVMaXN0OiBbXSwKICAgICAgZm9ybTogewogICAgICAgIHR5cGVubzogJycsCiAgICAgICAgdHlwZW5hbWU6ICcnCiAgICAgIH0sCiAgICAgIHNob3dEaWFsb2c6IGZhbHNlLAogICAgICBkZWZhdWx0UHJvcHM6IHsKICAgICAgICBsYWJlbDogJ25hbWUnCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgdHlwZW5hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfliIbnsbvlkI3np7DkuI3og73kuLrnqbonLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgdHlwZW5vOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn5YiG57G757yW5Y+35LiN6IO95Li656m6JywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkVHlwZSgpOwogIH0sCiAgbWV0aG9kczogewogICAgbG9hZFR5cGUoKSB7CiAgICAgIGdldEFsbFR5cGUoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy50eXBlTGlzdCA9IHJlczsKICAgICAgfSk7CiAgICB9LAogICAgc2VsZWN0VHlwZShub2RlLCBrZXksIGhhbGZOb2RlLCBoYWxmS2V5KSB7CiAgICAgIHRoaXMuJGVtaXQoJ3NlbmRUeXBlaWRzJywga2V5LmNoZWNrZWRLZXlzKTsKICAgIH0sCiAgICBzdWJtaXRGb3JtKCkgewogICAgICB0aGlzLiRyZWZzLmFkZFR5cGVGb3JtUmVmLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGFkZFR5cGUoewogICAgICAgICAgICAndHlwZW5vJzogdGhpcy5mb3JtLnR5cGVubywKICAgICAgICAgICAgJ25hbWUnOiB0aGlzLmZvcm0udHlwZW5hbWUKICAgICAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgICAgICB0aGlzLiRtb2RhbC5tc2dTdWNjZXNzKCLmt7vliqDnsbvliKvliIbnsbvmiJDlip8iKTsKICAgICAgICAgICAgdGhpcy5sb2FkVHlwZSgpOwogICAgICAgICAgICB0aGlzLmhhbmRsZUNsb3NlRGlhbG9nKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUNsb3NlRGlhbG9nKCkgewogICAgICB0aGlzLnJlc2V0Rm9ybSgnYWRkVHlwZUZvcm1SZWYnKTsKICAgICAgdGhpcy5zaG93RGlhbG9nID0gZmFsc2U7CiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlQWRkVHlwZScpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":"AA4BA;AAEA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAH;MACA;IACA;EACA;EACAI;IACA;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;QACAC;MACA;MACAC;QACAJ,WACA;UAAAK;UAAAC;UAAAC;QAAA,EACA;QACAR,SACA;UAAAM;UAAAC;UAAAC;QAAA;MAEA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;UACAC;YAAA;YAAA;UAAA;YACA;YACA;YACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","props","addTypeOpen","type","default","watch","data","typeList","form","typeno","typename","showDialog","defaultProps","label","rules","required","message","trigger","created","methods","loadType","getAllType","selectType","submitForm","addType","handleCloseDialog"],"sourceRoot":"src/views/basicdata/type","sources":["category.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-tree ref=\"tree\" :data=\"typeList\" show-checkbox empty-text=\"暂无查询到类别数据\" node-key=\"id\"\r\n      @check=\"selectType\" highlight-current default-expand-all :expand-on-click-node=\"false\" :props=\"defaultProps\">\r\n      <span slot-scope=\"{ data }\">\r\n        {{data.name}}（{{data.no}}）\r\n      </span>\r\n    </el-tree>\r\n    \r\n    <el-dialog :visible.sync=\"showDialog\" title=\"添加类别分类\" @close=\"handleCloseDialog\" width=\"500px\">\r\n      <el-form ref=\"addTypeFormRef\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n        <el-form-item label=\"分类编号\" prop=\"typeno\">\r\n          <el-input v-model=\"form.typeno\" placeholder=\"请输入分类编号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类名称\" prop=\"typename\">\r\n          <el-input v-model=\"form.typename\" placeholder=\"请输入分类名称\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\r\n        <el-button @click=\"handleCloseDialog\">取消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { addType, getAllType } from '../../../api/basicdata/type'\r\n\r\nexport default {\r\n  name: 'TypeCategory',\r\n  props: {\r\n    addTypeOpen: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  watch: {\r\n    addTypeOpen(oldVal, newVal) {\r\n      this.showDialog = this.addTypeOpen\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      typeList: [],\r\n      form: {\r\n        typeno: '',\r\n        typename: ''\r\n      },\r\n      showDialog: false,\r\n      defaultProps: {\r\n        label: 'name'\r\n      },\r\n      rules: {\r\n        typename: [\r\n            { required: true, message: '分类名称不能为空', trigger: 'blur' }\r\n        ],\r\n        typeno: [\r\n            { required: true, message: '分类编号不能为空', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadType()\r\n  },\r\n  methods: {\r\n    loadType() {\r\n      getAllType().then(res => {\r\n        this.typeList = res\r\n      })\r\n    },\r\n    selectType(node, key, halfNode, halfKey) {\r\n      this.$emit('sendTypeids', key.checkedKeys)\r\n    },\r\n    submitForm() {\r\n      this.$refs.addTypeFormRef.validate(valid => {\r\n        if(valid) {\r\n          addType({'typeno': this.form.typeno, 'name': this.form.typename}).then(() => {\r\n            this.$modal.msgSuccess(\"添加类别分类成功\")\r\n            this.loadType()\r\n            this.handleCloseDialog()\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleCloseDialog() {\r\n      this.resetForm('addTypeFormRef')\r\n      this.showDialog = false\r\n      this.$emit('closeAddType')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n\r\n</style>"]}]}