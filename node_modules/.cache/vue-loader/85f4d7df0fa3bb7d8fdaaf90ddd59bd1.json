{"remainingRequest":"D:\\vue_workspace\\filemanage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_workspace\\filemanage\\src\\components\\TreeSelect\\index.vue?vue&type=style&index=0&id=3b6dbb26&lang=less&","dependencies":[{"path":"D:\\vue_workspace\\filemanage\\src\\components\\TreeSelect\\index.vue","mtime":1672664887597},{"path":"D:\\vue_workspace\\filemanage\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\filemanage\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"D:\\vue_workspace\\filemanage\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vue_workspace\\filemanage\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\filemanage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\filemanage\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKg0KLmVsLXNjcm9sbGJhciAuZWwtc2Nyb2xsYmFyX192aWV3IC5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0gew0KICBoZWlnaHQ6IGF1dG87DQogIG1heC1oZWlnaHQ6IDI3NHB4Ow0KICBwYWRkaW5nOiAwOw0KICBvdmVyZmxvdzogaGlkZGVuOw0KICBvdmVyZmxvdy15OiBhdXRvOw0KfQ0KLmVsLXNlbGVjdC1kcm9wZG93bl9faXRlbS5zZWxlY3RlZCB7DQogIGZvbnQtd2VpZ2h0OiBub3JtYWw7DQp9DQp1bCBsaT4+Pi5lbC10cmVlIC5lbC10cmVlLW5vZGVfX2NvbnRlbnQgew0KICBoZWlnaHQ6IGF1dG87DQogIHBhZGRpbmc6IDAgMjBweDsNCn0NCi5lbC10cmVlLW5vZGVfX2xhYmVsIHsNCiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsNCn0NCi5lbC10cmVlID4+Pi5pcy1jdXJyZW50IC5lbC10cmVlLW5vZGVfX2xhYmVsIHsNCiAgY29sb3I6ICM0MDlFRkY7DQogIGZvbnQtd2VpZ2h0OiA3MDA7DQp9DQouZWwtdHJlZT4+Pi5pcy1jdXJyZW50IC5lbC10cmVlLW5vZGVfX2NoaWxkcmVudCAuZWwtdHJlZS1ub2RlX19sYWJlbCB7DQogIGNvbG9yOiAjNjA2MjY2Ow0KICBmb250LXdlaWdodDogbm9ybWFsOw0KfQ0KKi8NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/TreeSelect","sourcesContent":["<template>\r\n  <el-select :value=\"valueTitle\" :clearable=\"clearable\" @clear=\"clearHandle\">\r\n    <el-option :value=\"valueTitle\" :label=\"valueTitle\">\r\n      <el-tree \r\n        id=\"tree-option\"\r\n        ref=\"selectTree\"\r\n        :accordion=\"accordion\"\r\n        :data=\"options\"\r\n        :props=\"props\"\r\n        :node-key=\"props.value\"\r\n        :default-expanded-keys=\"defaultExpandeKey\"\r\n        @node-click=\"handleNodeClick\">\r\n        <span class=\"custom-tree-node\" slot-scope=\"{ data }\">\r\n          (<span>{{ data.children.length }}</span>)\r\n        </span>\r\n      </el-tree>\r\n    </el-option>\r\n  </el-select>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'TreeSelect',\r\n  props: {\r\n    props: {\r\n      type: Object,\r\n      default: {\r\n        value: 'id',\r\n        label: 'title',\r\n        children: 'children'\r\n      }\r\n    },\r\n    options: {\r\n      type: Array,\r\n      default: []\r\n    },\r\n    value: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    clearable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    //自动收起\r\n    accordion: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      valueId: this.value,\r\n      valueTitle: '',\r\n      defaultExpandeKey: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initHandle()\r\n  },\r\n  methods: {\r\n    initHandle() {\r\n      if(this.valueId) {\r\n        this.valueTitle = this.$refs.selectTree.getNode(this.valueId).data[this.props.label]\r\n        this.$refs.selectTree.setCurrentKey(this.valueId)\r\n        this.defaultExpandeKey = [this.valueId]\r\n      }\r\n      this.$nextTick(() => {\r\n        let scrollWrap = document.querySelectorAll('.el-scrollbar .el-select-dropdown__wrap')[0]\r\n        let scrollBar = document.querySelectorAll('.el-scrollbar .el-scrollbar__bar')\r\n        scrollWrap.style.cssText = 'margin: 0px; max-height: none; overflow: hidden;'\r\n        scrollBar.forEach(ele => ele.style.width = 0)\r\n      })\r\n    },\r\n    //切换选项\r\n    handleNodeClick(node) {\r\n      this.valueTitle = node[this.props.label]\r\n      this.valueId = node[this.props.value]\r\n      this.$emit('treeSelectedValue', this.valueId)\r\n      this.defaultExpandeKey = []\r\n    },\r\n    //清楚选中\r\n    clearHandle() {\r\n      this.valueTitle = ''\r\n      this.valueId = null\r\n      this.defaultExpandeKey = []\r\n      this.clearSelected()\r\n      this.$emit('treeSelectedValue', null)\r\n    },\r\n    //清空选中样式\r\n    clearSelected() {\r\n      let allNode = document.querySelectorAll('#tree-option .el-tree-node')\r\n      allNode.forEach(ele => ele.classList.remove('is-current'))\r\n    }\r\n  },\r\n  watch: {\r\n    value() {\r\n      this.valueId = this.value\r\n      this.initHandle()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n/*\r\n.el-scrollbar .el-scrollbar__view .el-select-dropdown__item {\r\n  height: auto;\r\n  max-height: 274px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  overflow-y: auto;\r\n}\r\n.el-select-dropdown__item.selected {\r\n  font-weight: normal;\r\n}\r\nul li>>>.el-tree .el-tree-node__content {\r\n  height: auto;\r\n  padding: 0 20px;\r\n}\r\n.el-tree-node__label {\r\n  font-weight: normal;\r\n}\r\n.el-tree >>>.is-current .el-tree-node__label {\r\n  color: #409EFF;\r\n  font-weight: 700;\r\n}\r\n.el-tree>>>.is-current .el-tree-node__childrent .el-tree-node__label {\r\n  color: #606266;\r\n  font-weight: normal;\r\n}\r\n*/\r\n</style>"]}]}