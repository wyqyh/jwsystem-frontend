{"remainingRequest":"D:\\vue_workspace\\jwsystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue_workspace\\jwsystem\\src\\layout\\components\\TagsView\\index.vue?vue&type=style&index=0&id=fac8ca64&lang=less&","dependencies":[{"path":"D:\\vue_workspace\\jwsystem\\src\\layout\\components\\TagsView\\index.vue","mtime":1679038799942},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue_workspace\\jwsystem\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoNCi50YWdzLXZpZXctY29udGFpbmVyIHsNCiAgaGVpZ2h0OiAzNHB4Ow0KICB3aWR0aDogMTAwJTsNCiAgYmFja2dyb3VuZDogI2ZmZjsNCiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkOGRjZTU7DQogIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwIHJnYmEoMjMyLCAyMjgsIDIyOCwgMC4wMSksIDAgMCAzcHggMCByZ2IoMTY4LCAxNjUsIDE2NSwgMC4wMSk7DQogIC50YWdzLXZpZXctd3JhcHBlciB7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIC5lbC1zY3JvbGxiYXJfX3dyYXAgew0KICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICB9DQogICAgLnRhZ3Mtdmlldy1pdGVtIHsNCiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICAgIGhlaWdodDogMjZweDsNCiAgICAgIGxpbmUtaGVpZ2h0OiAyNnB4Ow0KICAgICAgYm9yZGVyOiAxcHggc29saWQgI2Q4ZGNlNTsNCiAgICAgIHBhZGRpbmc6IDAgOHB4Ow0KICAgICAgbWFyZ2luLWxlZnQ6IDVweDsNCiAgICAgIG1hcmdpbi10b3A6IDRweDsNCiAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgIGNvbG9yOiAjNDk1MDYwOw0KICAgICAgJjpmaXJzdC1vZi10eXBlIHsNCiAgICAgICAgbWFyZ2luLWxlZnQ6IDE1cHg7DQogICAgICB9DQogICAgICAmOmxhc3Qtb2YtdHlwZSB7DQogICAgICAgIG1hcmdpbi1yaWdodDogMTVweDsNCiAgICAgIH0NCiAgICAgICYuYWN0aXZlIHsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwODhmZjsNCiAgICAgICAgY29sb3I6ICNmZmY7DQogICAgICAgIGJvcmRlci1jb2xvcjogIzAwODhmZjsNCiAgICAgICAgJjo6YmVmb3JlIHsNCiAgICAgICAgICBjb250ZW50OiAnJzsNCiAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAgICAgICAgIHdpZHRoOiA4cHg7DQogICAgICAgICAgaGVpZ2h0OiA4cHg7DQogICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDJweDsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgLmVsLWljb24tY2xvc2Ugew0KICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgICAgIHdpZHRoOiAxNnB4Ow0KICAgICAgICBoZWlnaHQ6IDE2cHg7DQogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgdmVydGljYWwtYWxpZ246IDJweDsNCiAgICAgICAgJjo6YmVmb3JlIHsNCiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNik7DQogICAgICAgICAgdmVydGljYWwtYWxpZ246IC0ycHg7DQogICAgICAgIH0NCiAgICAgICAgJjpob3ZlciB7DQogICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2I0YmNjYzsNCiAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfQ0KICAuY29udGV4dG1lbnUgew0KICAgIG1hcmdpbjogMDsNCiAgICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAgIHotaW5kZXg6IDMwMDA7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCiAgICBwYWRkaW5nOiA1cHggMDsNCiAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgZm9udC1zaXplOiAxMnB4Ow0KICAgIGZvbnQtd2VpZ2h0OiA0MDA7DQogICAgY29sb3I6ICMzMzM7DQogICAgYm94LXNoYWRvdzogMnB4IDJweCAzcHggMCByZ2JhKDAsIDAsIDAsIC4zKTsNCiAgICBsaSB7DQogICAgICBtYXJnaW46IDA7DQogICAgICBwYWRkaW5nOiA3cHggMTZweDsNCiAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICY6aG92ZXIgew0KICAgICAgICBiYWNrZ3JvdW5kOiAjZWVlOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0KDQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;AAwOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/TagsView","sourcesContent":["<template>\r\n  <div class=\"tags-view-container\">\r\n    <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\">\r\n      <router-link\r\n        v-for=\"tag in visitedViews\"\r\n        :to=\"{path: tag.path}\"\r\n        :key=\"tag.path\"\r\n        tag=\"span\"\r\n        :class=\"isActive(tag) ? 'active' : ''\"\r\n        class=\"tags-view-item\"\r\n        ref=\"tag\"\r\n        @contextmenu.prevent.native=\"openMenu(tag, $event)\"\r\n      >\r\n        {{ tag.title }}\r\n        <span v-if=\"!isAffix(tag)\" class=\"el-icon-close\" @click.stop=\"closeSelectedTag(tag)\"></span>\r\n      </router-link>\r\n    </scroll-pane>\r\n    <ul v-show=\"visible\" :style=\"{left:left+'px',top:top+'px'}\" class=\"contextmenu\">\r\n      <!-- <li @click=\"refreshSelectedTag(selectedTag)\"><i class=\"el-icon-refresh-right\"></i> 刷新页面</li>-->\r\n      <li v-if=\"!isAffix(selectedTag)\" @click=\"closeSelectedTag(selectedTag)\"><i class=\"el-icon-close\"></i> 关闭当前</li>\r\n      <li @click=\"closeOthersTags\"><i class=\"el-icon-circle-close\"></i> 关闭其他</li>\r\n      <li v-if=\"!isFirstView()\" @click=\"closeLeftTags\"><i class=\"el-icon-back\"></i> 关闭左侧</li>\r\n      <li v-if=\"!isLastView()\" @click=\"closeRightTags\"><i class=\"el-icon-right\"></i> 关闭右侧</li>\r\n      <li @click=\"closeAllTags(selectedTag)\"><i class=\"el-icon-circle-close\"></i> 全部关闭</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport ScrollPane from \"./ScrollPane\"\r\nimport path from 'path'\r\n\r\nexport default {\r\n  name: \"TagsView\",\r\n  data() {\r\n    return {\r\n      top: 0,\r\n      left: 0,\r\n      visible: false,\r\n      selectedTag: {},\r\n      affixTags: []\r\n    }\r\n  },\r\n  components: {\r\n    ScrollPane\r\n  },\r\n  computed: {\r\n    visitedViews() {\r\n      return this.$store.state.tagsView.visitedViews\r\n    },\r\n    routes() {\r\n      return this.$store.state.permission.sidebarRouters\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initTags()\r\n    this.addTags()\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.addTags()\r\n      this.moveToCurrentTag()\r\n    },\r\n    visible(value) {\r\n      if (value) {\r\n        document.body.addEventListener('click', this.closeMenu)\r\n      } else {\r\n        document.body.removeEventListener('click', this.closeMenu)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    addTags() {\r\n      const {name} = this.$route\r\n      if(name) {\r\n        this.$store.dispatch('tagsView/addView', this.$route)\r\n      }\r\n    },\r\n    isActive(route) {\r\n      return route.path === this.$route.path\r\n    },\r\n    closeSelectedTag(view) {\r\n      this.$store.dispatch('tagsView/delView', view).then(( {visitedViews} ) => {\r\n        if(this.isActive(view)) {\r\n          this.toLastView(visitedViews, view)\r\n        }\r\n      })\r\n    },\r\n    toLastView(visitedViews, view) {\r\n      const lastestView = visitedViews.slice(-1)[0]\r\n      if(lastestView) {\r\n        this.$router.push(lastestView.fullPath)\r\n      }\r\n    },\r\n    isAffix(tag) {\r\n      return tag.affix\r\n    },\r\n    refreshSelectedTag(view) {\r\n      this.$tab.refreshPage(view);\r\n    },\r\n    initTags() {\r\n      const affixTags = this.affixTags = this.filterAffixTags(this.routes)\r\n      for (const tag of affixTags) {\r\n        // Must have tag name\r\n        if (tag.name) {\r\n          this.$store.dispatch('tagsView/addVisitedView', tag)\r\n        }\r\n      }\r\n    },\r\n    closeRightTags() {\r\n      this.$tab.closeRightPage(this.selectedTag).then(visitedViews => {\r\n        if (!visitedViews.find(i => i.fullPath === this.$route.fullPath)) {\r\n          this.toLastView(visitedViews)\r\n        }\r\n      })\r\n    },\r\n    closeLeftTags() {\r\n      this.$tab.closeLeftPage(this.selectedTag).then(visitedViews => {\r\n        if (!visitedViews.find(i => i.fullPath === this.$route.fullPath)) {\r\n          this.toLastView(visitedViews)\r\n        }\r\n      })\r\n    },\r\n    closeOthersTags() {\r\n      this.$router.push(this.selectedTag).catch(()=>{});\r\n      this.$tab.closeOtherPage(this.selectedTag).then(() => {\r\n        this.moveToCurrentTag()\r\n      })\r\n    },\r\n    closeAllTags(view) {\r\n      this.$tab.closeAllPage().then(({ visitedViews }) => {\r\n        if (this.affixTags.some(tag => tag.path === this.$route.path)) {\r\n          return\r\n        }\r\n        this.toLastView(visitedViews, view)\r\n      })\r\n    },\r\n    toLastView(visitedViews, view) {\r\n      const latestView = visitedViews.slice(-1)[0]\r\n      if (latestView) {\r\n        this.$router.push(latestView.fullPath)\r\n      } else {\r\n        // now the default is to redirect to the home page if there is no tags-view,\r\n        // you can adjust it according to your needs.\r\n        if (view.name === '首页') {\r\n          // to reload home page\r\n          this.$router.replace({ path: '/redirect' + view.fullPath })\r\n        } else {\r\n          this.$router.push('/')\r\n        }\r\n      }\r\n    },\r\n    moveToCurrentTag() {\r\n      const tags = this.$refs.tag\r\n      this.$nextTick(() => {\r\n        for (const tag of tags) {\r\n          if (tag.to.path === this.$route.path) {\r\n            this.$refs.scrollPane.moveToTarget(tag)\r\n            // when query is different then update\r\n            if (tag.to.fullPath !== this.$route.fullPath) {\r\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route)\r\n            }\r\n            break\r\n          }\r\n        }\r\n      })\r\n    },\r\n    isFirstView() {\r\n      try {\r\n        return this.selectedTag.fullPath === '/' || this.selectedTag.fullPath === this.visitedViews[1].fullPath\r\n      } catch (err) {\r\n        return false\r\n      }\r\n    },\r\n    isLastView() {\r\n      try {\r\n        return this.selectedTag.fullPath === this.visitedViews[this.visitedViews.length - 1].fullPath\r\n      } catch (err) {\r\n        return false\r\n      }\r\n    },\r\n    filterAffixTags(routes, basePath = '/') {\r\n      let tags = []\r\n      routes.forEach(route => {\r\n        if (route.meta && route.meta.affix) {\r\n          const tagPath = path.resolve(basePath, route.path)\r\n          tags.push({\r\n            fullPath: tagPath,\r\n            path: tagPath,\r\n            name: route.name,\r\n            meta: { ...route.meta }\r\n          })\r\n        }\r\n        if (route.children) {\r\n          const tempTags = this.filterAffixTags(route.children, route.path)\r\n          if (tempTags.length >= 1) {\r\n            tags = [...tags, ...tempTags]\r\n          }\r\n        }\r\n      })\r\n      return tags\r\n    },\r\n    openMenu(tag, e) {\r\n      const menuMinWidth = 105\r\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\r\n      const offsetWidth = this.$el.offsetWidth // container width\r\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\r\n      const left = e.clientX - offsetLeft + 215 // 15: margin right\r\n\r\n      if (left > maxLeft) {\r\n        this.left = maxLeft\r\n      } else {\r\n        this.left = left\r\n      }\r\n\r\n      this.top = e.clientY + 20\r\n      this.visible = true\r\n      this.selectedTag = tag\r\n    },\r\n    closeMenu() {\r\n      this.visible = false\r\n    },\r\n    handleScroll() {\r\n      this.closeMenu()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n\r\n.tags-view-container {\r\n  height: 34px;\r\n  width: 100%;\r\n  background: #fff;\r\n  border-bottom: 1px solid #d8dce5;\r\n  box-shadow: 0 1px 3px 0 rgba(232, 228, 228, 0.01), 0 0 3px 0 rgb(168, 165, 165, 0.01);\r\n  .tags-view-wrapper {\r\n    height: 100%;\r\n    .el-scrollbar__wrap {\r\n      overflow: hidden;\r\n    }\r\n    .tags-view-item {\r\n      display: inline-block;\r\n      height: 26px;\r\n      line-height: 26px;\r\n      border: 1px solid #d8dce5;\r\n      padding: 0 8px;\r\n      margin-left: 5px;\r\n      margin-top: 4px;\r\n      font-size: 12px;\r\n      cursor: pointer;\r\n      color: #495060;\r\n      &:first-of-type {\r\n        margin-left: 15px;\r\n      }\r\n      &:last-of-type {\r\n        margin-right: 15px;\r\n      }\r\n      &.active {\r\n        background-color: #0088ff;\r\n        color: #fff;\r\n        border-color: #0088ff;\r\n        &::before {\r\n          content: '';\r\n          background: #fff;\r\n          width: 8px;\r\n          height: 8px;\r\n          display: inline-block;\r\n          border-radius: 50%;\r\n          margin-right: 2px;\r\n        }\r\n      }\r\n      .el-icon-close {\r\n        border-radius: 50%;\r\n        width: 16px;\r\n        height: 16px;\r\n        text-align: center;\r\n        vertical-align: 2px;\r\n        &::before {\r\n          transform: scale(0.6);\r\n          vertical-align: -2px;\r\n        }\r\n        &:hover {\r\n          background-color: #b4bccc;\r\n          color: #fff;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .contextmenu {\r\n    margin: 0;\r\n    background: #fff;\r\n    z-index: 3000;\r\n    position: absolute;\r\n    list-style-type: none;\r\n    padding: 5px 0;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: #333;\r\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, .3);\r\n    li {\r\n      margin: 0;\r\n      padding: 7px 16px;\r\n      cursor: pointer;\r\n      &:hover {\r\n        background: #eee;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</style>"]}]}